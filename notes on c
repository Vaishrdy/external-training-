NOTES on c lang
1/11/2022
				INTRODUCTION TO C LANG
*C lang was created by Dennis RIchie in the year 1972 ,it was written using "Assembly language.
*It is developed during 1969-1972 at AT&T Bell labs.
*C lang is formulised by ANSI(American National Standards Institute) in the year 1988.

*Compiler - Converts our code to Machine code
*Format Specifier (FS)- Specifies the format to compiler (also does vice versa)

For C lang of version >= C11
Value 		Datatype		FS		size		Range
----------------------------------------------------------------------------------------------------------------------------------
23		short	             %d,%i		2bytes		32767,-32768	
21    int or long int(8bytes)	            %ld,%li		4bytes 		-2147483648 to 2147483647
34LL                    long long	           %lld,%lli		8bytes			****use this for int in competitions****
'z'		char	            %c,%s		1 byte		-128 to 127
21.03f	                 float		%f		4 bytes		3.4e^(+/-8)              {6-7 digit precise} 
16.4		double		%lf		8 bytes				{14 digit precise}
45.33L	           long double		%Lf		12 bytes    		**HIGHLY PRECISE**{18 digit},**use thisss in competitions,if not use double**


					OPERATOR -- *A unit of operation
APart from arithmetic,relational,logical,bitwise...... we have :
*Special Operators - sizeof , *(Deference) , &(Reference)
*Miscll. Operaotrs - [](Subscript)   ,(Comma)


					TOKENS - They r the smallest units( BUILDING BLOCK) of a program.
1. Identifier : Unique names that are given to variables,types,functions and labels 
   	Rules:       a.) Spaces are not allowed
		b.) Digits are not allowed infront
		c.) Special chars aren't allowed except _(underscore)
2. Keywords : Pre-defined words by the compiler (32 reserved keywords in C)
3. Constants : 
	a.)Numeric - Integer , Real , Floating
	b.)Character - normal chars and backslash chars
4.Operators 
5.Strings : Collection of chars terminated by '\0'
6.Miscll : {} , () , ;  #.....etc


///REFER TO ORDER OF PRECEDENCE IN GOOGLE: ---- IMPORTANT TO SOLVE 2/3 TCS NINJA MCQ'S  *************


*Modulus operator (%) returns remainder of n/x :
	formulas of n%x is = n- ((n/x)*x)


----------------------------------------------------------------------------*************------------------------------------------------------------------------------------------

15/11/2022				             BINARY SYSTEM

* In the binary representation of a number if LSB is 1 the number is ODD
				  if LSB is 0 the number is EVEN	
 1-0001	2-0010	3-0011	4-0100...............8-0000 1000
72
36
18
9
4
2
ans 0 1 0 0 1 0 0 0					

93
46 1
23 0
11 1
5 1
2 1
1 0
ans 1011101

116
58 0
29 0
14 1
7 0
3 1
1 1
0 1
ans 01110100

198
99 0
49 1
24 1
12 0
6 0
3 0
1 1
0 1
ans 011000110

298
149 0
74 1
37 0
18 1
9 0
4 1
2 0
1 0
0 1
ans 0 1001 0 1010 

1298
649 0
324 1
162 0
81 0
40 1
20 0
10 0
5 0
2 1
1 0
0 1
ans 0 10100 01 0010

5673
2836 1
1418 0
709 0
354 1
177 0
88 1
44 0
22 0
11 0
5 1
2 1
1 0
0 1
ans 0 1011000101001
						BITWISE AND (&)

17&25 -- 17:   10001
	25:11001
	     10001 = 17 is ANS

35&96 -- 35 : 100011
               96 : 
	35 is 32+3 and 96 is 64+32 common bw them is 32 so ans is 32 (SHORTCUT)

117&264
117=64+32+16+4+1	          264=256+8 , 
NO Common elements 	SO ANS =0

					               BITWISE OR (|)
235|73 =
235= 128+64+32+8+2+1
73 = 64+8+1
ans = 235    (SHORTCYT : 64,8,1 all r there in 235 so ans is 235+0=235)

76|22    22= 16+4+2
76 = 64+8+4
38 0
19 0
9 1
4 1
2 0
1 0
1001100 = 76
0010110 = 22
          or:  1011110 ans -  64+16+8+4+2=94 
***SHORTCUT : we do 76+(16+2)---bcas 16,2 are there in 22 but not in 76 

						BITWISE XOR (^)
13^17
13=01101 (8+4+1)
17=10001 (16+1)
A = 11100 = 28

32^16
32=100000
16=010000
A =110000 = 48

47^53
47=101111 (32+4+2+1)
53=110101 (32+16+4+1)
A = 011010 = 26

18^9
18=10010 (16+2)
9  =01001 (8+1)
A = 11011 = 27

37^19
37=100101
19=010011
A=110110 = 54

						BITWISE LEFT SHIFT(<<)
EX : 7 (0111):
	7<<1 : 111 <<1 : 111 0 == 14
	7<<2 : 111<<2 : 111 00 == 28
	7<<3 : 111<<3 : 111 000 == 56
	7<<4: 111<<4 : 111 0000 == 128
-- thus N << k gives N*(2**k)

						BITWISE RIGHT SHIFT ( >>)
			
EX: 35(0100011) :
	35>>1: 01000 1 = 17
	35>>2: 01000  = 8
	32>>3: 0100 = 4
-- thus N << k gives N/(2**k)

PRECEDENCE  : [ (<<,>>) > (&) > (^) > (|) ]

Q. Which operator has the HIGHEST TIME COMPLEXITY ? 
A. Modulus (%) operator - bcas it is amalgimation of addition,division and multiplicaion

// ALWAYS USE TERNARY OPERATOR WHEN GREATEST OF CONSTANT NUMBERS IN ASKED







